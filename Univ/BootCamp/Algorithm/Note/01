2/3(금) 자료구조와 알고리즘 첫 시간

- 선형 자료구조(리스트, 스택, 큐) & 비선형 자료구조

- 파일 자료구조 : 디스크 저장방식에 따라 순차파일과 직접파일로 구분
	순차 파일 : 파일에 다른 내용 추가 or 삭제하면 파일 내용 재구성해서 오래걸림
		      ex) 시험지 뒤로 넘기기, 줄이 길면 이 과정이 너무 오래걸림
	직접 파일 : 파일 내용을 임의 물리적 위치에 기록, 중간에 빵꾸난 곳들이 있어 효율성은 떨어지지만 처리 속도는 더 빠름
			  ex) 학생 한명이 빠져도 자리 안 땡기고 그냥 한 번 더 뒤로 넘김

- 알고리즘
  문제 해결의 논리적 과정
  의사코드를 이용한 표현 : 슈도 코드(의사 코드, 프로그래밍 언어보다 인간언어에 가까움)
  프로그램 코드로 표현 : 프로그래밍 언어 코드(실제 사용하는 프로그래9밍 언어들)
- 알고리즘 성능측정 : 시간 복잡도(Time Complexity) : 소요시간 기준으로 분석(수행회수에 따른)
			     ex) 검색 오래걸리면 못 기다림
- 알고리즘 성능표기 : 빅-오 표기법(Big-Oh Notation) : 입력 데이터에 따른 알고리즘 수행 횟수
				 ex) 1~10까지 숫자 정했을때 컴퓨터가 몇번만에 맞출수있는지

- 선형 리스트(Linear List, Ordered List)
  입력 순서대로 저장하는 데이터에 적합
  데이터 삽입 : 빈칸확보 -> 자리이동 -> 데이터 삽입
            (맨 끝 삽입 : 자리확보 - append(None) & 값 넣기 - [끝자리번호] = "ㅁㅁ")
            (중간 삽입 : [해당 자리번호] = None & 값 넣기 & 자리 이동 - [4] = [3])
  데이터 삭제 : 데이터 삭제 -> 자리 이동 -> 빈칸 제거
            (맨 끝 삭제 : del())
            (중간 삭제 : [해당 자리번호] = None & 자리 이동 - [4] = [3])
  






